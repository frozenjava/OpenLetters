name: OpenLetters-Android

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run ktlintCheck
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlintCheck

      - name: Run unit tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: app:testDevelopmentReleaseUnitTest

      - name: Decode and prepare keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > release-key.jks

      - name: Build Release Artifacts
        uses: gradle/gradle-build-action@v2
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_DEVELOPMENT_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_DEVELOPMENT_KEY_PASSWORD }}
        with:
          arguments: app:clean app:bundleDevelopmentRelease app:assembleDevelopmentRelease

      - name: Get versionName
        id: get_version_name
        run: chmod +x ./gradlew && echo "VERSION_NAME=$(./gradlew printVersionName -q)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.VERSION_NAME }}-${{ github.run_number }}-development
          release_name: ${{ env.VERSION_NAME }}-${{ github.run_number }}-development
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/development/release/*.apk
          asset_name: open-letters-${{ env.VERSION_NAME }}-${{ github.run_number }}-development.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload AAB to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/developmentRelease/*.aab
          asset_name: open-letters-${{ env.VERSION_NAME }}-${{ github.run_number }}-development.aab
          asset_content_type: application/octet-stream
