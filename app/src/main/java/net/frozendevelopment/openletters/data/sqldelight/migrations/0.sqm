import net.frozendevelopment.openletters.data.sqldelight.models.ThreadId;
import net.frozendevelopment.openletters.data.sqldelight.models.LetterId;
import net.frozendevelopment.openletters.data.sqldelight.models.DocumentId;
import net.frozendevelopment.openletters.data.sqldelight.models.CategoryId;
import androidx.compose.ui.graphics.Color;

CREATE TABLE letter (
    id TEXT AS LetterId PRIMARY KEY NOT NULL ON CONFLICT REPLACE,
    sender TEXT,
    recipient TEXT,
    body TEXT,
    created INTEGER NOT NULL,
    lastModified INTEGER NOT NULL
);

CREATE TABLE document (
    id TEXT AS DocumentId PRIMARY KEY NOT NULL ON CONFLICT IGNORE,
    letterId TEXT AS LetterId NOT NULL,
    FOREIGN KEY (letterId) REFERENCES letter(id) ON DELETE CASCADE
);

CREATE TABLE category (
    id TEXT AS CategoryId PRIMARY KEY ,
    label TEXT NOT NULL,
    color INTEGER AS Color NOT NULL DEFAULT 3318440,
    priority INTEGER NOT NULL DEFAULT 0,
    created INTEGER NOT NULL,
    lastModified INTEGER NOT NULL
);

CREATE TABLE letterToCategory (
    letterId TEXT AS LetterId NOT NULL,
    categoryId TEXT AS CategoryId NOT NULL,
    PRIMARY KEY (letterId, categoryId) ON CONFLICT IGNORE,
    FOREIGN KEY (letterId) REFERENCES letter(id) ON DELETE CASCADE,
    FOREIGN KEY (categoryId) REFERENCES category(id) ON DELETE CASCADE
);

CREATE TABLE thread (
    id TEXT AS ThreadId PRIMARY KEY NOT NULL ON CONFLICT REPLACE ,
    title TEXT NOT NULL,
    created INTEGER NOT NULL,
    lastModified INTEGER NOT NULL
);

CREATE TABLE letterToThread(
    letterId TEXT AS LetterId NOT NULL,
    threadId TEXT AS ThreadId NOT NULL,
    PRIMARY KEY (letterId, threadId) ON CONFLICT IGNORE,
    FOREIGN KEY (letterId) REFERENCES letter(id) ON DELETE CASCADE,
    FOREIGN KEY (threadId) REFERENCES thread(id) ON DELETE CASCADE
);
