import androidx.compose.ui.graphics.Color;
import java.time.LocalDateTime;
import kotlin.Boolean;
import net.frozendevelopment.openletters.data.sqldelight.models.CategoryId;
import net.frozendevelopment.openletters.data.sqldelight.models.DocumentId;
import net.frozendevelopment.openletters.data.sqldelight.models.LetterId;
import net.frozendevelopment.openletters.data.sqldelight.models.ReminderId;

CREATE TABLE letter (
    id TEXT AS LetterId PRIMARY KEY NOT NULL ON CONFLICT REPLACE,
    sender TEXT,
    recipient TEXT,
    body TEXT,
    created INTEGER AS LocalDateTime NOT NULL,
    lastModified INTEGER AS LocalDateTime NOT NULL
);

CREATE TABLE document (
    id TEXT AS DocumentId PRIMARY KEY NOT NULL ON CONFLICT IGNORE,
    letterId TEXT AS LetterId NOT NULL,
    FOREIGN KEY (letterId) REFERENCES letter(id) ON DELETE CASCADE
);

CREATE TABLE category (
    id TEXT AS CategoryId PRIMARY KEY ,
    label TEXT NOT NULL,
    color INTEGER AS Color NOT NULL DEFAULT 3318440,
    priority INTEGER NOT NULL DEFAULT 0,
    created INTEGER AS LocalDateTime NOT NULL,
    lastModified INTEGER AS LocalDateTime NOT NULL
);

CREATE TABLE letterToCategory (
    letterId TEXT AS LetterId NOT NULL,
    categoryId TEXT AS CategoryId NOT NULL,
    PRIMARY KEY (letterId, categoryId) ON CONFLICT IGNORE,
    FOREIGN KEY (letterId) REFERENCES letter(id) ON DELETE CASCADE,
    FOREIGN KEY (categoryId) REFERENCES category(id) ON DELETE CASCADE
);

CREATE TABLE reminder (
    id TEXT AS ReminderId PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT,
    scheduledFor INTEGER AS LocalDateTime NOT NULL,
    created INTEGER AS LocalDateTime NOT NULL,
    lastModified INTEGER AS LocalDateTime NOT NULL,
    notificationId INTEGER NOT NULL,
    acknowledged INTEGER AS Boolean NOT NULL DEFAULT 0
);

CREATE TABLE letterToReminder (
    letterId TEXT AS LetterId NOT NULL,
    reminderId TEXT AS ReminderId NOT NULL,
    PRIMARY KEY (letterId, reminderId) ON CONFLICT IGNORE,
    FOREIGN KEY (letterId) REFERENCES letter(id) ON DELETE CASCADE,
    FOREIGN KEY (reminderId) REFERENCES reminder(id) ON DELETE CASCADE
);

CREATE TABLE appMigration (
    id TEXT PRIMARY KEY NOT NULL
);

CREATE VIRTUAL TABLE letterFTS USING fts5(
    id TEXT,
    sender TEXT,
    recipient TEXT,
    body TEXT,
    created TEXT
);

CREATE TRIGGER launch_after_letter_insert
AFTER INSERT ON letter
BEGIN
    INSERT INTO letterFTS (id, sender, recipient, body, created)
    VALUES (
        new.id,
        new.sender,
        new.recipient,
        new.body,
        datetime(new.created, 'unixepoch', 'localtime')
    );
END;

CREATE TRIGGER launch_after_letter_update
AFTER UPDATE ON letter
BEGIN
    UPDATE letterFTS SET
        sender = new.sender,
        recipient = new.recipient,
        body = new.body
    WHERE id = new.id;
END;
